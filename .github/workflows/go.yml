# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install dependencies
      run: go mod tidy

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U testuser -d testdb; then
            echo "PostgreSQL is ready."
            break
          fi
          echo "Waiting for PostgreSQL..."
          sleep 3
        done
          
    - name: Run tests
      env:
        DB_USER: testuser
        DB_PASSWORD: testpassword
        DB_NAME: testdb
        DB_HOST: localhost
        DB_PORT: 5432
        DB_SSLMODE: disable
      run: go test ./... -v

    - name: Build the application
      run: go build -v ./...


